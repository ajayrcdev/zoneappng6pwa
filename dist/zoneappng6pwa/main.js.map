{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n.buttons {\\n  width: 100%;\\n  margin: 0 auto;\\n  font-size: 1.2em;\\n  padding: .2em;\\n}\\n\\n.title {\\n  font-size: 2em;\\n}\\n\\n.timer {\\n  padding-top: 1em;\\n  font-size: 5em;\\n  font-weight: bold;\\n  color: red;\\n  margin: 0 auto;\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.break-time {\\n  font-size: 3em;\\n  color: green;\\n}\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <!-- <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>Shiba Inu</mat-card-title>\\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\\n  </mat-card-header>\\n  <!-- <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\"> -->\\n  <mat-card-content>\\n    <div *ngIf=\\\"countDownTimeLeft\\\">\\n        <span class=\\\"title\\\">Hello, I know you are trying to reach me, but I am in ZONE right now! I will be free in </span>\\n        <br/>\\n        <div class=\\\"timer\\\"> {{countDownTimeLeft | date:'mm:ss'}}</div>\\n    </div>\\n    <div *ngIf=\\\"!countDownTimeLeft\\\">\\n      <span class=\\\"title\\\">Hurry up! you have <span class=\\\"break-time\\\">{{countUpTimeLeft | date:'mm:ss'}}</span> minutes left before I go back to The Zone! </span>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions *ngIf=\\\"countDownTimeLeft\\\">\\n    <br/>\\n    <br/>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"restart()\\\" class=\\\"buttons\\\">RESTART</button>\\n    <br/>\\n    <br/>\\n    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"toggle()\\\" class=\\\"buttons\\\">\\n      <ng-container *ngIf=\\\"paused\\\">START</ng-container>\\n      <ng-container *ngIf=\\\"!paused\\\">PAUSE</ng-container>\\n    </button>\\n  </mat-card-actions>\\n</mat-card>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nconst Peer = window['Peer'] || {};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'zoneappng6pwa';\n  defaultZoneTime =  25 * 60 * 1000; // 25 mins ; 10 * 1000; //\n  defaultBreakTime = 5 * 60 * 1000; // 5 mins ; 5 * 1000; //\n  oneSecond = 1000; // in terms of ms\n  paused = false;\n\n  countDownTimeLeft = 0;\n  countUpTimeLeft = this.defaultBreakTime;\n\n  timerCountDown;\n  timerCountUp;\n\n  peer; // web rtc\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.reset();\n    this.startCountDownTimer();\n\n    try { // setup peerjs\n      this.peer = new Peer({});\n      this.peer.on('open', function(id) {\n        console.log('My peer ID is: ' + id);\n      });\n    } catch (e) {\n      console.log('cant use webrtc! e=', e);\n    }\n\n  }\n\n  startCountDownTimer() {\n    this.timerCountDown = setInterval( () => {\n      this.countDownTimeLeft -= this.oneSecond;\n      if (!this.countDownTimeLeft) {\n        this.stopCountDownTimer();\n        this.startCountUpTimer();\n      }\n    }, this.oneSecond);\n  }\n\n  stopCountDownTimer() {\n    clearInterval(this.timerCountDown);\n    this.countDownTimeLeft = 0;\n  }\n\n  startCountUpTimer() {\n    this.timerCountUp = setInterval( () => {\n      this.countUpTimeLeft -= this.oneSecond;\n      if (!this.countUpTimeLeft) {\n        this.stopCountUpTimer();\n        this.reset();\n        this.startCountDownTimer();\n      }\n    }, this.oneSecond);\n  }\n\n  stopCountUpTimer() {\n    clearInterval(this.timerCountUp);\n    this.countUpTimeLeft = 0;\n  }\n\n  pauseOrStartTimer() {\n  }\n\n  reset() {\n    clearInterval(this.timerCountDown);\n    clearInterval(this.timerCountUp);\n\n    this.paused = false;\n    this.countDownTimeLeft = this.defaultZoneTime;\n    this.countUpTimeLeft = this.defaultBreakTime;\n  }\n\n  restart() {\n    this.reset();\n    this.startCountDownTimer();\n  }\n\n  toggle() {\n    if (!this.paused) {\n      clearInterval(this.timerCountDown);\n      this.paused = true;\n    } else {\n      this.paused = false;\n      this.startCountDownTimer();\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatProgressBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}